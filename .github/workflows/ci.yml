name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  MIX_ENV: test

jobs:
  test:
    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        elixir: ["1.12.3", "1.13.4"]
        otp: ["25.0.2", "24.3.4.2"]
    steps:
      - uses: actions/checkout@v2

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - id: mix-cache
        name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          path: deps

      - uses: actions/cache@v3
        id: cache-mecab
        with:
          path: |
            ${{ github.workspace }}/mecab
          key: ${{ runner.os }}-mecab

      - name: setup mecab environments
        run: |
          echo "MECAB_PREFIX=$GITHUB_WORKSPACE/mecab" >> "$GITHUB_ENV"
          echo "LD_LIBRARY_PATH=$GITHUB_WORKSPACE/mecab/lib" >> "$GITHUB_ENV"
          echo "$GITHUB_WORKSPACE/mecab/bin" >> "$GITHUB_PATH"

      - name: Instal Dependencies
        run: sudo apt-get install -y clang libc6-dev make

      - name: Install MeCab
        if: steps.cache-mecab.outputs.cache-hit != 'true'
        run: |
          wget --quiet -O - 'https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7cENtOXlicTFaRUE' | tar xzf -
          cd mecab-0.996
          ./configure --enable-utf8-only --prefix="$MECAB_PREFIX"
          make clean
          make
          make check
          sudo make install
          sudo ldconfig
          cd ..
          wget --quiet -O - 'https://drive.google.com/uc?export=download&id=0B4y35FiV1wh7MWVlSDBCSXZMTXM' | tar xzf -
          cd mecab-ipadic-2.7.0-20070801
          ./configure --with-charset=utf8 --prefix="$MECAB_PREFIX"
          make clean
          make
          make check
          sudo make install

      - name: ldconfig
        run: sudo ldconfig

      - name: Install Mix Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: lint
        run: mix lint

      - name: Run Tests
        run: |
          mix test --warnings-as-errors
